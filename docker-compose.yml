version: "3.10"

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:8080"
    volumes:
      - "./frontend/src:/src"
      - "/src/node_modules"
    depends_on:
      - api
  api:
    build:
      # path to directory containing Dockerfile
      context: ./api
      args:
        # set DEV argument to true
        - DEV=true
    # map local port 8000 to port 8000 in container
    ports:
      - "8000:8000"
    # map directory from system to docker container
    volumes:
      - "./api/src:/src"
    # commands run from container
    command: >
      sh -c "
              python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000
      "
    # define environmental variables
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=devpass
      - DATABASE_PORT=5432
      # redis env variables
      - REDIS_HOST=redis_db
      - REDIS_PORT=6379
      - REDIS_PASS=dev_redispass
    # wait till db service start
    depends_on:
      - db
      - redis_db
  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    volumes:
      - dev-db-data:/var/lib/postgres/data
    # initial environment variables
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpass
  redis_db:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass dev_redispass
    volumes:
      - redis-db-data:/var/lib/redis/data

volumes:
  dev-db-data:
    driver: local
  redis-db-data:
    driver: local
